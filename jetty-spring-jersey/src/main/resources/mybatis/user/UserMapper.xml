<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiantian.mapper.UserMapper">
	<cache readOnly="true" eviction="FIFO" flushInterval="60000" />
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.tiantian.bean.UserBean">
		<result column="id" property="id" />
		<result column="name" property="name" />
		<result column="age" property="age" />
		<result column="password" property="password" />
		<result column="createTime" property="createTime" />
		<result column="updateTime" property="updateTime" />
	</resultMap>
	<!-- user table all fields -->
	<sql id="Base_Column_List">
		id,name,age,password,createTime,updateTime
	</sql>


	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="id != null">
				and id = #{id}
			</if>
		</trim>
	</sql>


	<!-- 插入记录 -->
	<insert id="add" parameterType="Object">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user(name,password,createTime,updateTime)
		values(#{name},#{password},now(),now())
	</insert>

	<!-- 根据id，修改记录 -->
	<update id="update" parameterType="Object">
		update user set
		name=#{name},age=#{age},password=${password},updateTime=new() where
		id=#{id}
	</update>

	<update id="test" parameterType="Object">
		update user set
		age='asdfasdf' where
		id=#{id}
	</update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateBySelective" parameterType="Object">
		update user set
		<trim suffixOverrides=",">
			<if test="token != null  and token != '' ">
				name=#{name},
			</if>
		</trim>
		where id=#{id}
	</update>

	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from user where
		id = #{id}
	</delete>

	<!-- 根据id查询 系统认证token -->
	<select id="queryById" resultMap="BaseResultMap" parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from user where id = #{id}
	</select>

</mapper>   
